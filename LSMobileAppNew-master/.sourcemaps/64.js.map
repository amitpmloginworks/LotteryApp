{"version":3,"sources":["../../src/pages/splash/splash.module.ts","../../src/pages/splash/splash.ts"],"names":[],"mappings":"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","file":"64.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SplashPage } from './splash';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SplashPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SplashPage),\r\n  ],\r\n  exports:[SplashPage]\r\n})\r\nexport class SplashPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/splash/splash.module.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, IonicPage } from 'ionic-angular';\r\n\r\nimport { WelcomePage } from '../welcome/welcome';\r\nimport { HomePage } from '../home/home';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { CommonService } from '../../services/common.service';\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'page-splash',\r\n    templateUrl: 'splash.html'\r\n})\r\nexport class SplashPage {\r\n\r\n    constructor(\r\n        private storage: Storage,\r\n        private authSrv: AuthService,\r\n        public navCtrl: NavController,\r\n        public navParams: NavParams) {\r\n\r\n        //check the storage is ready or not    \r\n        this.storage.ready().then(() => {\r\n            var email;\r\n            var passWord;\r\n            var newDate;\r\n            var tokenTime\r\n            var dateTimeNow = new Date();\r\n\r\n            this.storage.get('DF_EMAIL').then((val) => {\r\n                console.log(\"splash df email\", val)\r\n                email = val;\r\n            });\r\n            this.storage.get('DF_PASSWORD').then((val) => {\r\n                console.log(\"splash df password\", val)\r\n                passWord = val;\r\n            });\r\n            this.storage.get('session_token_time').then((val) => {\r\n                console.log(\"token expiry time\", val)\r\n                if (val) {\r\n                    newDate = new Date(val)\r\n                    tokenTime = newDate;\r\n                }\r\n            });\r\n            this.storage.get('session').then((val) => {\r\n                CommonService.session = JSON.parse(val);\r\n                console.log('Your session is', val);\r\n\r\n                setTimeout(() => {\r\n                    //Checking the user token(DF credentials)\r\n                    if (email) {\r\n                        //Checking the if token is valid or not\r\n                        if (dateTimeNow < newDate) {\r\n                            this.storage.get('session_ID').then((val) => {\r\n                                CommonService.sessionId = val;\r\n                            });\r\n\r\n                            this.storage.get('user_session_id').then((val) => {\r\n                                CommonService.userSessionId = val;\r\n                            });\r\n\r\n                            this.storage.get('user_session_token').then((val) => {\r\n                                CommonService.userSessionToken = val;\r\n\r\n                            });\r\n\r\n                            //if valid then setting the home page as root \r\n                            setTimeout(() => {\r\n                                this.navCtrl.setRoot('HomePage');\r\n                            }, 0);\r\n\r\n                        }\r\n                        //in case if no time is existed for the token expiry\r\n                        else if (!tokenTime) {\r\n                            this.storage.remove('session_token_time')\r\n                            this.storage.remove('user_session_token')\r\n                            CommonService.JWT = \"\";\r\n                            this.navCtrl.setRoot(WelcomePage);\r\n                        }\r\n                        else {\r\n                            //in case if token is expired\r\n                            var datetime = new Date();\r\n                            datetime.setHours(datetime.getHours() + 10)\r\n                            this.authSrv.getJWTToken(email, passWord).subscribe(\r\n                                successData => {\r\n                                    console.log(\"retrived the new data for JWT\", successData)\r\n                                    this.storage.set('session_ID', CommonService.sessionId);\r\n                                    this.storage.set('user_session_token', successData.session_token);\r\n                                    this.storage.set('user_session_id', successData.session_id);\r\n                                    this.storage.set('session_token_time', datetime)\r\n                                    CommonService.JWT = successData.session_token;\r\n\r\n                                    this.storage.get('session_ID').then((val) => {\r\n                                        CommonService.sessionId = val;\r\n                                    });\r\n\r\n                                    this.storage.get('user_session_id').then((val) => {\r\n                                        CommonService.userSessionId = val;\r\n                                    });\r\n\r\n                                    this.storage.get('user_session_token').then((val) => {\r\n                                        CommonService.userSessionToken = val;\r\n                                    });\r\n                                    setTimeout(() => {\r\n                                        this.navCtrl.setRoot('HomePage');\r\n                                    }, 500);\r\n                                },\r\n                                error => {\r\n                                    console.log(\"user login error\", error);\r\n                                },\r\n                                () => { }\r\n                            );\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if no user token then setting to welcome page\r\n                        this.storage.remove('session_token_time')\r\n                        this.storage.remove('user_session_token')\r\n                        CommonService.JWT = \"\";\r\n                        this.navCtrl.setRoot(WelcomePage);\r\n                    }\r\n\r\n\r\n                }, 0);\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/splash/splash.ts"],"sourceRoot":""}