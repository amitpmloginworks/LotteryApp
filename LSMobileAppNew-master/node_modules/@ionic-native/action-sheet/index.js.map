{"version":3,"sources":["../../../src/@ionic-native/plugins/action-sheet/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAuDxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AASH;IAAiC,+BAAiB;IARlD;QAAA,qEAiDC;QAvCC;;WAEG;QACH,oBAAc,GAMV;YACF,iBAAiB,EAAE,CAAC;YACpB,eAAe,EAAE,CAAC;YAClB,gBAAgB,EAAE,CAAC;YACnB,yBAAyB,EAAE,CAAC;YAC5B,0BAA0B,EAAE,CAAC;SAC9B,CAAC;;IAwBJ,CAAC;IAtBC;;;;;OAKG;IAEH,0BAAI,GAAJ,UAAK,OAA4B,IAAkB,MAAM,CAAC,CAAC,CAAC;IAG5D;;;OAGG;IAEH,0BAAI,GAAJ,UAAK,OAAa,IAAkB,MAAM,CAAC,CAAC,CAAC;IACxC,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAdA;QADC,OAAO,EAAE;;;;2CACkD;IAQ5D;QADC,OAAO,EAAE;;;;2CACmC;IAlClC,WAAW;QARvB,MAAM,CAAC;YACN,UAAU,EAAE,aAAa;YACzB,MAAM,EAAE,4BAA4B;YACpC,SAAS,EAAE,qBAAqB;YAChC,IAAI,EAAE,8DAA8D;YACpE,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC;SACvE,CAAC;OAEW,WAAW,CAyCvB;IAAD,kBAAC;CAzCD,AAyCC,CAzCgC,iBAAiB,GAyCjD;SAzCY,WAAW","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n\r\nexport interface ActionSheetOptions {\r\n\r\n  /**\r\n   * The labels for the buttons. Uses the index x\r\n   */\r\n  buttonLabels: string[];\r\n\r\n  /**\r\n   * The title for the actionsheet\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * The subtitle for the actionsheet (IOS only)\r\n   */\r\n  subtitle?: string;\r\n\r\n  /**\r\n   * Theme to be used on Android\r\n   */\r\n  androidTheme?: number;\r\n\r\n  /**\r\n   * Enable a cancel on Android\r\n   */\r\n  androidEnableCancelButton?: boolean;\r\n\r\n  /**\r\n   * Enable a cancel on Windows Phone\r\n   */\r\n  winphoneEnableCancelButton?: boolean;\r\n\r\n  /**\r\n   * Add a cancel button with text\r\n   */\r\n  addCancelButtonWithLabel?: string;\r\n\r\n  /**\r\n   * Add a destructive button with text\r\n   */\r\n  addDestructiveButtonWithLabel?: string;\r\n\r\n  /**\r\n   * On an iPad, set the X,Y position\r\n   */\r\n  position?: number[];\r\n\r\n  /**\r\n   * Choose if destructive button will be the last\r\n   */\r\n  destructiveButtonLast?: boolean;\r\n}\r\n\r\n/**\r\n * @name Action Sheet\r\n * @description\r\n * The ActionSheet plugin shows a native list of options the user can choose from.\r\n *\r\n * Requires Cordova plugin: `cordova-plugin-actionsheet`. For more info, please see the [ActionSheet plugin docs](https://github.com/EddyVerbruggen/cordova-plugin-actionsheet).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { ActionSheet, ActionSheetOptions } from '@ionic-native/action-sheet';\r\n *\r\n * constructor(private actionSheet: ActionSheet) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * let buttonLabels = ['Share via Facebook', 'Share via Twitter'];\r\n *\r\n * const options: ActionSheetOptions = {\r\n *   title: 'What do you want with this image?',\r\n *   subtitle: 'Choose an action',\r\n *   buttonLabels: buttonLabels,\r\n *   addCancelButtonWithLabel: 'Cancel',\r\n *   addDestructiveButtonWithLabel: 'Delete',\r\n *   androidTheme: this.actionSheet.ANDROID_THEMES.THEME_HOLO_DARK,\r\n *   destructiveButtonLast: true\r\n * };\r\n *\r\n * this.actionSheet.show(options).then((buttonIndex: number) => {\r\n *   console.log('Button pressed: ' + buttonIndex);\r\n * });\r\n * ```\r\n * @interfaces\r\n * ActionSheetOptions\r\n */\r\n@Plugin({\r\n  pluginName: 'ActionSheet',\r\n  plugin: 'cordova-plugin-actionsheet',\r\n  pluginRef: 'plugins.actionsheet',\r\n  repo: 'https://github.com/EddyVerbruggen/cordova-plugin-actionsheet',\r\n  platforms: ['Android', 'Browser', 'iOS', 'Windows', 'Windows Phone 8']\r\n})\r\n\r\nexport class ActionSheet extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Convenience property to select an Android theme value\r\n   */\r\n  ANDROID_THEMES: {\r\n    THEME_TRADITIONAL: number;\r\n    THEME_HOLO_DARK: number;\r\n    THEME_HOLO_LIGHT: number;\r\n    THEME_DEVICE_DEFAULT_DARK: number;\r\n    THEME_DEVICE_DEFAULT_LIGHT: number;\r\n  } = {\r\n    THEME_TRADITIONAL: 1,\r\n    THEME_HOLO_DARK: 2,\r\n    THEME_HOLO_LIGHT: 3,\r\n    THEME_DEVICE_DEFAULT_DARK: 4,\r\n    THEME_DEVICE_DEFAULT_LIGHT: 5\r\n  };\r\n\r\n  /**\r\n   * Show a native ActionSheet component. See below for options.\r\n   * @param options {ActionSheetOptions} Options See table below\r\n   * @returns {Promise<any>} Returns a Promise that resolves with the index of the\r\n   *   button pressed (1 based, so 1, 2, 3, etc.)\r\n   */\r\n  @Cordova()\r\n  show(options?: ActionSheetOptions): Promise<any> { return; }\r\n\r\n\r\n  /**\r\n   * Progamtically hide the native ActionSheet\r\n   * @returns {Promise<any>} Returns a Promise that resolves when the actionsheet is closed\r\n   */\r\n  @Cordova()\r\n  hide(options?: any): Promise<any> { return; }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}